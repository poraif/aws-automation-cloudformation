# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html

Description: This template creates a nested stack, allowing multiple templates to be deployed in a single operation

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: devops2
  
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.nano
  
  KeyName:
    Description: EC2 Key Pair
    Type: AWS::EC2::KeyPair::KeyName
    Default: instance-key
  
  AMI:
    Description: AMI ID from custom image on the console for web server
    Type: AWS::EC2::Image::Id
    Default: ami-082d160f4bd6aeb34

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://cf-templates-1eco1r5bhxzo9-us-east-1.s3.amazonaws.com/vpc.yaml'
      Parameters:
        EnvironmentName: !Ref EnvironmentName

  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://cf-templates-1eco1r5bhxzo9-us-east-1.s3.amazonaws.com/security_groups.yaml'
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        EnvironmentName: !Ref EnvironmentName
  
  InstanceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://cf-templates-1eco1r5bhxzo9-us-east-1.s3.amazonaws.com/instances.yaml'
      Parameters:
        AMI: !Ref AMI
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        BastionSG: !GetAtt SecurityGroupStack.Outputs.BastionSG
        DBServerSG: !GetAtt SecurityGroupStack.Outputs.DBServerSG
        WebServerSG: !GetAtt SecurityGroupStack.Outputs.WebServerSG
        PublicSubnet1Id: !GetAtt VPCStack.Outputs.PublicSubnet1Id
        PublicSubnet2Id: !GetAtt VPCStack.Outputs.PublicSubnet2Id
        PrivateSubnet1Id: !GetAtt VPCStack.Outputs.PrivateSubnet1Id
        EnvironmentName: !Ref EnvironmentName
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName

  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://cf-templates-1eco1r5bhxzo9-us-east-1.s3.amazonaws.com/load_balancer.yaml'
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        WebServerInstance: !GetAtt InstanceStack.Outputs.WebServerInstance
        EnvironmentName: !Ref EnvironmentName
        WebServerSG: !GetAtt SecurityGroupStack.Outputs.WebServerSG
        PublicSubnet1Id: !GetAtt VPCStack.Outputs.PublicSubnet1Id
        PublicSubnet2Id: !GetAtt VPCStack.Outputs.PublicSubnet2Id
        PublicSubnet3Id: !GetAtt VPCStack.Outputs.PublicSubnet3Id

  AutoScalingGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://cf-templates-1eco1r5bhxzo9-us-east-1.s3.amazonaws.com/autoscaling_group.yaml'
      Parameters:
        VpcId: !GetAtt VPCStack.Outputs.VpcId
        AMI: !Ref AMI
        EnvironmentName: !Ref EnvironmentName
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        LaunchTemplateSG: !GetAtt SecurityGroupStack.Outputs.LaunchTemplateSG
        PublicSubnet1Id: !GetAtt VPCStack.Outputs.PublicSubnet1Id
        PublicSubnet2Id: !GetAtt VPCStack.Outputs.PublicSubnet2Id
        PublicSubnet3Id: !GetAtt VPCStack.Outputs.PublicSubnet3Id
        TargetGroup: !GetAtt LoadBalancerStack.Outputs.TargetGroup
        WebServerInstance: !GetAtt InstanceStack.Outputs.WebServerInstance
    

