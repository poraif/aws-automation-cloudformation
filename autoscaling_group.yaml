# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-alarm.html
# https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/application-insights-recommended-metrics.html

Description: This template sets up the launch template, autoscaling group, scaling policies and associated alarms.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  WebServerAMI:
    Description: AMI ID from custom image on the console for web server
    Type: AWS::EC2::Image::Id
  
  EmailAddress:
    Description: Email address to notify if there are any scaling issues
    Type: String
    Default: 20104299@mail.wit.ie

  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
  
  InstanceType:
    Description: EC2 instance type
    Type: String
  
  KeyName:
    Description: EC2 Key Pair
    Type: AWS::EC2::KeyPair::KeyName
  
  WebServerSG:
    Description: Security Group for the Launch Template
    Type: AWS::EC2::SecurityGroup::Id
  
  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Type: AWS::EC2::Subnet::Id
  
  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Type: AWS::EC2::Subnet::Id
  
  PublicSubnet3Id:
    Description: Public Subnet 3 ID
    Type: AWS::EC2::Subnet::Id

  TargetGroup:
    Description: Target Group ARN
    Type: AWS::ElasticLoadBalancingV2::TargetGroup::TargetGroupArn
    
Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref WebServerAMI
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref WebServerSG
        IamInstanceProfile:
          Name: LabInstanceProfile
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            sudo -u ec2-user bash -c '/home/ec2-user/applaunch.sh'
        Monitoring:
          Enabled: true
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub ${EnvironmentName} LaunchTemplate

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${EnvironmentName} AutoScalingGroup
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 5
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - !Ref PublicSubnet1Id
        - !Ref PublicSubnet2Id
        - !Ref PublicSubnet3Id
      MetricsCollection:
        - Granularity: 1Minute
      TargetGroupARNs:
        - !Ref TargetGroup
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} AutoScaleWebServer
          PropagateAtLaunch: true
        - Key: Environment
          Value: !Ref EnvironmentName
          PropagateAtLaunch: true

  ScaleOutPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: StepScaling
      AdjustmentType: ChangeInCapacity
      MetricAggregationType: Average
      StepAdjustments: 
        - MetricIntervalLowerBound: '0'
          MetricIntervalUpperBound: '10'
          ScalingAdjustment: '1'
        - MetricIntervalLowerBound: '10'
          MetricIntervalUpperBound: '20'
          ScalingAdjustment: '2'
        - MetricIntervalLowerBound: '20'
          ScalingAdjustment: '3'

  ScaleInPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: StepScaling
      AdjustmentType: ChangeInCapacity
      MetricAggregationType: Average
      StepAdjustments: 
        - MetricIntervalLowerBound: '-10'
          MetricIntervalUpperBound: '0'
          ScalingAdjustment: '1'
        - MetricIntervalLowerBound: '-20'
          MetricIntervalUpperBound: '-10'
          ScalingAdjustment: '2'
        - MetricIntervalUpperBound: '-20'
          ScalingAdjustment: '3'

  HighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 50
      AlarmDescription: 'Scales instances up based on CPU utilization'
      Period: 60
      AlarmActions:
      - !Ref ScaleOutPolicy
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref AutoScalingGroup
      ComparisonOperator: GreaterThanOrEqualToThreshold
      MetricName: CPUUtilization

  LowCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 20
      AlarmDescription: 'Scales instances down based on CPU utilization'
      Period: 60
      AlarmActions:
      - !Ref ScaleInPolicy
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref AutoScalingGroup
      ComparisonOperator: LessThanOrEqualToThreshold
      MetricName: CPUUtilization

  HighMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 50
      AlarmDescription: 'Scales instances up based on memory utilization'
      Period: 60
      AlarmActions:
      - !Ref ScaleOutPolicy
      Namespace: System/Linux
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref AutoScalingGroup
      ComparisonOperator: GreaterThanOrEqualToThreshold
      MetricName: MemoryUtilization

  LowMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 2
      Statistic: Average
      Threshold: 20
      AlarmDescription: 'Scales instances down based on memory utilization'
      Period: 60
      AlarmActions:
      - !Ref ScaleInPolicy
      Namespace: System/Linux
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref AutoScalingGroup
      ComparisonOperator: LessThanOrEqualToThreshold
      MetricName: MemoryUtilization

  StatusCheckFailedAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 2
      Statistic: Maximum
      Threshold: 1
      AlarmDescription: 'Sends a notification if instances fail status check'
      Period: 300
      AlarmActions:
      - !Ref SNSTopic
      Namespace: AWS/EC2
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          !Ref AutoScalingGroup
      ComparisonOperator: GreaterThanOrEqualToThreshold
      MetricName: StatusCheckFailed

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: StatusCheckFailed

  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref SNSTopic
      Endpoint: !Ref EmailAddress
  
