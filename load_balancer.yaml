# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html

Description: This template sets up the target group, load balancer, and listener for my environment.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: devops2

Resources:
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName} TargetGroup 
      Port: 80
      Protocol: HTTP
      VpcId: !GetAtt VPCStack.Outputs.VpcId
      TargetType: instance
      Targets:
        - Id: !GetAtt InstanceStack.Outputs.WebServerInstance
      HealthCheckEnabled: True
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName} Load Balancer
      Type: application
      Scheme: internet-facing
      VpcId: !GetAtt VPCStack.Outputs.VpcId
      SecurityGroups:
        - !GetAtt SecurityGroupStack.Outputs.WebServerSG
      SubnetMappings:
        - SubnetId: !Select [ 0, !Ref VPCStack.Outputs.PublicSubnetIds ]
          AllocationId: !GetAtt VPCStack.Outputs.PublicSubnetAllocationIds
        - SubnetId: !Select [ 1, !Ref VPCStack.Outputs.PublicSubnetIds ]
          AllocationId: !GetAtt VPCStack.Outputs.PublicSubnetAllocationIds
        - SubnetId: !Select [ 2, !Ref VPCStack.Outputs.PublicSubnetIds ]
          AllocationId: !GetAtt VPCStack.Outputs.PublicSubnetAllocationIds
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP