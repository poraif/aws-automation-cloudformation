# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html

Description: This template deploys security groups required for the instances in my environment.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: devops2  

Resources:
  WebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCStack.Outputs.VpcId
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
  
  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCStack.Outputs.VpcId
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  LaunchTemplateSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCStack.Outputs.VpcId
      GroupDescription: Enable SSH access via port 22 and HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
  
  DBServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCStack.Outputs.VpcId
      GroupDescription: Enable MySQL access via port 3306
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !GetAtt WebServerSG.GroupId
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !GetAtt BastionSG.GroupId
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          SourceSecurityGroupId: !GetAtt WebServerSG.GroupId
      
    

  

